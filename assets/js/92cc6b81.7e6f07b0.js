"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9027],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),k=u(a),c=r,d=k["".concat(o,".").concat(c)]||k[c]||m[c]||l;return a?n.createElement(d,p(p({ref:t},s),{},{components:a})):n.createElement(d,p({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=k;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var u=2;u<l;u++)p[u]=a[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},85773:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),p=["components"],i={},o="Darklang Release 6",u={unversionedId:"changelog/release-6",id:"changelog/release-6",title:"Darklang Release 6",description:"October 1, 2022",source:"@site/docs/changelog/release-6.md",sourceDirName:"changelog",slug:"/changelog/release-6",permalink:"/changelog/release-6",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/changelog/release-6.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Darklang Release 7",permalink:"/changelog/release-7"},next:{title:"Darklang Release 5",permalink:"/changelog/release-5"}},s={},m=[{value:"Major features",id:"major-features",level:2},{value:"Support for negative ints and floats",id:"support-for-negative-ints-and-floats",level:3},{value:"Show function deprecation info",id:"show-function-deprecation-info",level:3},{value:"Expression backspacing/conversion",id:"expression-backspacingconversion",level:3},{value:"Editor improvements",id:"editor-improvements",level:2},{value:"Tuples",id:"tuples",level:3},{value:"Strings",id:"strings",level:3},{value:"Live values",id:"live-values",level:3},{value:"Autocomplete",id:"autocomplete",level:3},{value:"Misc Small fixes",id:"misc-small-fixes",level:3},{value:"Standard library changes",id:"standard-library-changes",level:2},{value:"Internal improvements",id:"internal-improvements",level:2}],k={toc:m};function c(e){var t=e.components,a=(0,r.Z)(e,p);return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"darklang-release-6"},"Darklang Release 6"),(0,l.kt)("p",null,"October 1, 2022"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See the ",(0,l.kt)("a",{parentName:"em",href:"https://blog.darklang.com/darklang-release-6/"},"blog post")," for further\ndiscussion.")),(0,l.kt)("h2",{id:"major-features"},"Major features"),(0,l.kt)("h3",{id:"support-for-negative-ints-and-floats"},"Support for negative ints and floats"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Turn existing ints and floats negative by typing ",(0,l.kt)("inlineCode",{parentName:"li"},"-")," in front\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/darklang/dark/pull/4498"},"#4498"),")")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/192357264-7ae39197-3ec8-4516-9f43-930817b80b99.gif",alt:null})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Type negative ints and floats from scratch\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4497"},"#4497"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Edit partials and turn them into ints and floats (including negatives)\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4497"},"#4497"),")"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/192331575-d4affbb3-127c-46c0-8e88-7a74c2e877db.gif",alt:null})),(0,l.kt)("h3",{id:"show-function-deprecation-info"},"Show function deprecation info"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Display why functions are deprecated\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/191844123-3c57f9a7-5240-4b84-8691-c91e7b8aee13.png",alt:null})),(0,l.kt)("h3",{id:"expression-backspacingconversion"},"Expression backspacing/conversion"),(0,l.kt)("p",null,"When you delete an ",(0,l.kt)("inlineCode",{parentName:"p"},"if"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"match"),", or lambda (",(0,l.kt)("inlineCode",{parentName:"p"},"\\"),") with one expression, replace\nit with that expression (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4457"},"#4457"),")"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/188941656-b0a584be-d115-41cc-a956-28b79646fa89.gif",alt:null})),(0,l.kt)("h2",{id:"editor-improvements"},"Editor improvements"),(0,l.kt)("h3",{id:"tuples"},"Tuples"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Tuples are in preview - enable them in ",(0,l.kt)("strong",{parentName:"em"},"Settings/Contributor Settings"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Show Tuple2 and Tuple3 functions in the autocomplete\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4482"},"#4482"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Add tuple pattern autocomplete completion\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4465"},"#4465"),")"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/906686/189388902-82bf765f-a9f4-4629-9fda-8f99918d259c.gif",alt:null})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Allow copy/pasting tuple patterns\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4469"},"#4469"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Allow you to press ",(0,l.kt)("inlineCode",{parentName:"p"},")")," to go over a tuple's closing parenthesis\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4454"},"#4454"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Put cursor at ",(0,l.kt)("em",{parentName:"p"},"start")," of blank tuple pattern when removing elements\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4455"},"#4455"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Don't allow tuple pattern parts to be overwritten by literals\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4453"},"#4453"),")"))),(0,l.kt)("h3",{id:"strings"},"Strings"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"indent one more space to line up multiline strings\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4477"},"#4477"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"show slight background in strings to help see how they line up (it's subtle!)\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4479"},"#4479"),",\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4477"},"#4477"),")"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/190904975-276ea41d-5880-460f-b68f-fedc70b1a0e1.png",alt:null})),(0,l.kt)("h3",{id:"live-values"},"Live values"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Show live values for lambdas properly (actually trace them and then display\nthem)) (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4456"},"#4456"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Display a lambda's runtime value as a live value\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4456"},"#4456"),")"))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/181762/188888447-62103469-5f6b-4eec-a4d3-fcc8f0fd9764.png",alt:null})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Show live values for literals instead of a spinner\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Correctly show analysis for partials (the old value)\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Show the correct live value for let definitions and record field names\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Show pipe live value for current pipe entry\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Don't spin when there's a pipe in a blank\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")"))),(0,l.kt)("h3",{id:"autocomplete"},"Autocomplete"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fix some standard library function descriptions - typos and punctuation\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Better UI when a function has no description (affects functions in the package\nmanager) (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fix fluid pattern autocomplete flashing\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4462"},"#4462"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fix bug when going further than 3 places down in the autocomplete for patterns\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4462"},"#4462"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Don't confuse secrets and datastores\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")"))),(0,l.kt)("h3",{id:"misc-small-fixes"},"Misc Small fixes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fix a few places secrets weren't hidden\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4456"},"#4456"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Allow users to use deprecated functions they already use in more cases\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4482"},"#4482"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Error messages use less ugly representation of dicts and lists\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4456"},"#4456"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Hide irrelevent GC error in analysis\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4505"},"#4505"),",\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4483"},"#4483"),",\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4449"},"#4449"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'When a handler\'s route changes, update "open-in-new-window" to use the new\nroute (',(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4502"},"#4502"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"don't insert ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," when copy/pasting from the start of ints in patterns\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4492"},"#4492"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Don't create empty patterns when creating match\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4469"},"#4469"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"put the cursor in right place after a string edit\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4497"},"#4497"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"convert partials to ints and floats\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4497"},"#4497"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"fix broken floats automatically\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4497"},"#4497"),")"))),(0,l.kt)("h2",{id:"standard-library-changes"},"Standard library changes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"Uuid::parse_v0")," and deprecate ",(0,l.kt)("inlineCode",{parentName:"li"},"String::toUUID"),"\n(",(0,l.kt)("a",{parentName:"li",href:"https://github.com/darklang/dark/pull/4480"},"#4480"),")")),(0,l.kt)("h2",{id:"internal-improvements"},"Internal improvements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"The dark repo is now\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/tags"},"tagged for each release"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Add IDs to debugger AST view\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4491"},"#4491"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"A number of fixes related to lambdas\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4456"},"#4456"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Rebrand 'pattern' as 'match pattern' throughout client codebase\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4487"},"#4487"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Refactor function representation\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4485"},"#4485"),")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use IDs more (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/darklang/dark/pull/4480"},"#4480"),")"))))}c.isMDXComponent=!0}}]);