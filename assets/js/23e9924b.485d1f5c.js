"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2427],{95080:e=>{e.exports=JSON.parse('{"version":{"pluginId":"docs-next","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"myAutogeneratedSidebar":[{"type":"link","label":"Overview","href":"/next/introduction","docId":"introduction","unlisted":false},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Your first Darklang application","href":"/next/tutorials/first-dark-application","docId":"tutorials/first-dark-application","unlisted":false}],"href":"/next/category/tutorials"},{"type":"category","label":"How-To Guides","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Step-by-Step Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"First Walk-through","href":"/next/how-to/walk-throughs/base","docId":"how-to/walk-throughs/base","unlisted":false}],"href":"/next/category/step-by-step-guides"},{"type":"link","label":"First How-to","href":"/next/how-to/base","docId":"how-to/base","unlisted":false}],"href":"/next/category/how-to-guides"},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Cloud Framework","href":"/next/reference/cloud-framework/","docId":"reference/cloud-framework/cloud-framework","unlisted":false},{"type":"link","label":"Darklang CLI","href":"/next/reference/darklang-cli/","docId":"reference/darklang-cli/darklang-cli","unlisted":false},{"type":"category","label":"Language Reference","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Built-In Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Bool","href":"/next/reference/language-reference/built-in-types/bool","docId":"reference/language-reference/built-in-types/bool","unlisted":false},{"type":"link","label":"Int","href":"/next/reference/language-reference/built-in-types/int","docId":"reference/language-reference/built-in-types/int","unlisted":false},{"type":"link","label":"Enum","href":"/next/reference/language-reference/built-in-types/enum","docId":"reference/language-reference/built-in-types/enum","unlisted":false},{"type":"link","label":"Record","href":"/next/reference/language-reference/built-in-types/record","docId":"reference/language-reference/built-in-types/record","unlisted":false}],"href":"/next/reference/language-reference/built-in-types/"},{"type":"link","label":"Operators","href":"/next/reference/language-reference/operators","docId":"reference/language-reference/operators","unlisted":false},{"type":"link","label":"Option & Result","href":"/next/reference/language-reference/option-result","docId":"reference/language-reference/option-result","unlisted":false},{"type":"link","label":"Type Checking","href":"/next/reference/language-reference/type-checking","docId":"reference/language-reference/type-checking","unlisted":false}],"href":"/next/reference/language-reference/"}],"href":"/next/category/reference"},{"type":"category","label":"Discussion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"First Discussion","href":"/next/discussion/base","docId":"discussion/base","unlisted":false}],"href":"/next/category/discussion"},{"type":"link","label":"Changelog","href":"/next/changelog","docId":"changelog","unlisted":false}]},"docs":{"changelog":{"id":"changelog","title":"Changelog","description":"While we continuously deliver features as they\'re written, we like to","sidebar":"myAutogeneratedSidebar"},"discussion/base":{"id":"discussion/base","title":"Discussion: base","description":"No content yet!","sidebar":"myAutogeneratedSidebar"},"how-to/base":{"id":"how-to/base","title":"How-to: base","description":"No content yet!","sidebar":"myAutogeneratedSidebar"},"how-to/walk-throughs/base":{"id":"how-to/walk-throughs/base","title":"Walk-through: base","description":"No content yet!","sidebar":"myAutogeneratedSidebar"},"introduction":{"id":"introduction","title":"Overview","description":"Darklang is an integrated language, framework, and editor for building web","sidebar":"myAutogeneratedSidebar"},"reference/cloud-framework/cloud-framework":{"id":"reference/cloud-framework/cloud-framework","title":"Cloud Framework","description":"A high level description of the set of the available cloud framework components.","sidebar":"myAutogeneratedSidebar"},"reference/darklang-cli/darklang-cli":{"id":"reference/darklang-cli/darklang-cli","title":"Darklang CLI","description":"A high level description of the CLI.","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/built-in-types/bool":{"id":"reference/language-reference/built-in-types/bool","title":"Bool","description":"Booleans are either true or false.","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/built-in-types/built-in-types":{"id":"reference/language-reference/built-in-types/built-in-types","title":"Built-In Types","description":"The darklang type system is based on functional languages such as F#.","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/built-in-types/enum":{"id":"reference/language-reference/built-in-types/enum","title":"Enum","description":"","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/built-in-types/int":{"id":"reference/language-reference/built-in-types/int","title":"Int","description":"Integers default to 64 bit signed numbers.","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/built-in-types/record":{"id":"reference/language-reference/built-in-types/record","title":"Record","description":"","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/language-reference":{"id":"reference/language-reference/language-reference","title":"Language Reference","description":"A high level description of the Darklang language.","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/operators":{"id":"reference/language-reference/operators","title":"Operators","description":"? and ! operators (similar to Rust, TypeScript, and Clojure) provide ways to ergonomically handle errors without being too annoying (see also Gradual Static Typing)","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/option-result":{"id":"reference/language-reference/option-result","title":"Option & Result","description":"How does type checking work? Do users need to know or care?","sidebar":"myAutogeneratedSidebar"},"reference/language-reference/type-checking":{"id":"reference/language-reference/type-checking","title":"Type Checking","description":"How does type checking work? Do users need to know or care?","sidebar":"myAutogeneratedSidebar"},"tutorials/first-dark-application":{"id":"tutorials/first-dark-application","title":"Tutorial: Your first Darklang application","description":"No content yet.","sidebar":"myAutogeneratedSidebar"}}}}')}}]);