"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5465],{66603:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var s=r(85893),t=r(11151);const l={},a="Darklang Release 5",i={id:"changelog/release-5",title:"Darklang Release 5",description:"September 1, 2022",source:"@site/docs-classic/changelog/release-5.md",sourceDirName:"changelog",slug:"/changelog/release-5",permalink:"/changelog/release-5",draft:!1,unlisted:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs-classic/changelog/release-5.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Release 6 - Sept, 2022",permalink:"/changelog/release-6"},next:{title:"Release 4 - July, 2022",permalink:"/changelog/release-4"}},d={},o=[{value:"Major feature: experimental Tuple support",id:"major-feature-experimental-tuple-support",level:2},{value:"Major feature: Contributor settings",id:"major-feature-contributor-settings",level:2},{value:"Language improvements",id:"language-improvements",level:2},{value:"Editor improvements",id:"editor-improvements",level:2},{value:"In-progress features - <code>HttpClient</code> and HTTP framework",id:"in-progress-features---httpclient-and-http-framework",level:2},{value:"Internal improvements",id:"internal-improvements",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"darklang-release-5",children:"Darklang Release 5"}),"\n",(0,s.jsx)(n.p,{children:"September 1, 2022"}),"\n",(0,s.jsx)(n.p,{children:"Darklang Release 5 includes support for Tuples, a revamped settings panel with\nnew settings for contributors, and significant internal reworks."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["See the ",(0,s.jsx)(n.a,{href:"https://blog.darklang.com/darklang-release-5/",children:"blog post"})," for further\ndiscussion."]})}),"\n",(0,s.jsx)(n.h2,{id:"major-feature-experimental-tuple-support",children:"Major feature: experimental Tuple support"}),"\n",(0,s.jsxs)(n.p,{children:["Dark now has work-in-progress support for tuples\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/issues/4265",children:"#4265"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4425",children:"#4425"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4404",children:"#4404"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4311",children:"#4311"}),") - unstructured lists of\nheterogeneous data:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tuple expressions can be created by entering ",(0,s.jsx)(n.code,{children:"("})," in a blank expression"]}),"\n",(0,s.jsxs)(n.li,{children:["Tuples may be deconstructed in ",(0,s.jsx)(n.code,{children:"match"})," patterns"]}),"\n",(0,s.jsxs)(n.li,{children:["New standard library functions have been added to work with Tuples:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Tuple2::create"}),", ",(0,s.jsx)(n.code,{children:"::first"}),", ",(0,s.jsx)(n.code,{children:"::second"}),", ",(0,s.jsx)(n.code,{children:"::swap"}),", ",(0,s.jsx)(n.code,{children:"::mapFirst"}),",\n",(0,s.jsx)(n.code,{children:"::mapSecond"}),", ",(0,s.jsx)(n.code,{children:"::mapBoth"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Tuple3::create"}),", ",(0,s.jsx)(n.code,{children:"::first"}),", ",(0,s.jsx)(n.code,{children:"::second"}),", ",(0,s.jsx)(n.code,{children:"::third"}),", ",(0,s.jsx)(n.code,{children:"::mapFirst"}),",\n",(0,s.jsx)(n.code,{children:"::mapSecond"}),", ",(0,s.jsx)(n.code,{children:"::mapThird"}),", ",(0,s.jsx)(n.code,{children:"::mapAllThree"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Tuple deconstruction (",(0,s.jsx)(n.code,{children:"let (lat long) = (39.9526, 75.1652)"}),") is not yet\navailable, so creating tuples of size greater than 3 is not recommended at\nthis time, unless you plan to use ",(0,s.jsx)(n.code,{children:"match"})," expressions to deconstruct the\nvalues."]}),"\n",(0,s.jsx)(n.li,{children:"Tuples are only available after opting in via Settings (see next section)"}),"\n",(0,s.jsxs)(n.li,{children:["More details on using tuples can be found in\n",(0,s.jsx)(n.a,{href:"/reference/languagedetails###Tuples",children:"Language Details"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"major-feature-contributor-settings",children:"Major feature: Contributor settings"}),"\n",(0,s.jsx)(n.p,{children:"A new Contributor Settings page has been added, allowing devs to look under the\nhood and use the same tools that employees are using to develop Darklang."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"contributor settings and tuple demo",src:r(3286).Z+"",width:"1498",height:"1014"})}),"\n",(0,s.jsxs)(n.p,{children:["In particular, devs can now build a local version of the Darklang editor, and\nuse it against their production Darklang codebase\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4387",children:"#4387"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4402",children:"#4402"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["We have also made it possible to enable the in-Editor debugger (note: this is\nuseful for the debugging the Darklang editor, not for debugging Darklang\nprograms) (",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4343",children:"#4343"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["Finally, in-progress features can now be enabled for devs, starting with Tuples\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4429",children:"#4429"}),")"]}),"\n",(0,s.jsx)(n.h2,{id:"language-improvements",children:"Language improvements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Allow floats where the whole number part is empty\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4371",children:"#4371"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"editor-improvements",children:"Editor improvements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Allow pressing enter in more expression bodies\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4438",children:"#4438"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Fixed Undo functionality, which was briefly broken\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4392",children:"#4392"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Fixed display of Error rail, which was briefly broken\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4373",children:"#4373"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Prevent Analysis errors due to using Tasks incorrectly\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4436",children:"#4436"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Revamping settings UI, adding reusuable form components, animations, toggle\nswitches, and switching to TailwindCSS\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4375",children:"#4375"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4401",children:"#4401"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4420",children:"#4420"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4426",children:"#4426"}),")"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"in-progress-features---httpclient-and-http-framework",children:["In-progress features - ",(0,s.jsx)(n.code,{children:"HttpClient"})," and HTTP framework"]}),"\n",(0,s.jsxs)(n.p,{children:["The current ",(0,s.jsx)(n.code,{children:"HttpClient"})," and HTTP framework are quite limited, only supporting\ntext request/response bodies, among many other problems. They also lack the\nflexibility to control and compose their behavior."]}),"\n",(0,s.jsxs)(n.p,{children:["As part of rewriting the Static Assets feature in Dark itself\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/issues/4259",children:"#4259"}),'), we are creating\n"thinner", more flexible, and more composable HttpClient\n(',(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4366",children:"#4366"}),") and HTTP handlers\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4353",children:"#4353"}),")"]}),"\n",(0,s.jsx)(n.h2,{id:"internal-improvements",children:"Internal improvements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Huge refactor of client types\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4326",children:"#4326"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Remove OCamlTypes (used for interop with the old OCaml backend)\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4396",children:"#4396"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4398",children:"#4398"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Add internal function to load Ops for a TopLevel\n(",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4391",children:"#4391"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Test file cleanups (",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4412",children:"#4412"}),",\n",(0,s.jsx)(n.a,{href:"https://github.com/darklang/dark/pull/4411",children:"#4411"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},3286:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/release-5-contrib-settings-1fbdfb8c4c95fcb87b66761cf7a6e9d3.gif"},11151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>a});var s=r(67294);const t={},l=s.createContext(t);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);