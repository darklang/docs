"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8668],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,m=p["".concat(u,".").concat(d)]||p[d]||g[d]||o;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=p;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},62287:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>a,contentTitle:()=>u,metadata:()=>c,toc:()=>s,default:()=>p});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),l=["components"],a={title:"Debugging"},u=void 0,c={unversionedId:"contributing/debugging",id:"contributing/debugging",title:"Debugging",description:"Log statements",source:"@site/docs/contributing/debugging.md",sourceDirName:"contributing",slug:"/contributing/debugging",permalink:"/contributing/debugging",editUrl:"https://github.com/darklang/docs/edit/main/docs/contributing/debugging.md",tags:[],version:"current",frontMatter:{title:"Debugging"},sidebar:"Contributing",previous:{title:"Glossary",permalink:"/contributing/glossary"},next:{title:"Troubleshooting",permalink:"/contributing/troubleshooting"}},s=[{value:"Log statements",id:"log-statements",children:[],level:2},{value:"Fuzzer",id:"fuzzer",children:[],level:2},{value:"Fluid Debugger",id:"fluid-debugger",children:[],level:2}],g={toc:s};function p(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"log-statements"},"Log statements"),(0,o.kt)("p",null,"Both the frontend and backend have simple log statements, which return ",(0,o.kt)("inlineCode",{parentName:"p"},"()"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Frontend (prints in the browser console): ",(0,o.kt)("inlineCode",{parentName:"li"},'Js.log2 "my message" anyValue')),(0,o.kt)("li",{parentName:"ul"},"Backend (prints in ",(0,o.kt)("inlineCode",{parentName:"li"},"rundir/logs/server.log")," in purple; search for\n",(0,o.kt)("strong",{parentName:"li"},'"INSPECT"'),"): ",(0,o.kt)("inlineCode",{parentName:"li"},'Log.inspecT "my message" any_value'))),(0,o.kt)("p",null,"If you have existing code like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rescript"},"let x = 5 in\nlet y = 6 in\nx + y\n")),(0,o.kt)("p",null,"You can add log statements like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rescript"},'let x = 5 in\nLog.inspecT "my message" x; (* or Js.log2, in the client)\nlet y = 6 in\nx + y\n')),(0,o.kt)("h2",{id:"fuzzer"},"Fuzzer"),(0,o.kt)("h2",{id:"fluid-debugger"},"Fluid Debugger"),(0,o.kt)("p",null,'There is a debugger in the UI that is mostly for debugging the fluid editor.\nMouse over the gear on the left and select "Fluid Debugger".'))}p.isMDXComponent=!0}}]);