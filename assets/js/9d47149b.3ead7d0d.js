"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5435],{3905:(e,t,n)=>{n.d(t,{kt:()=>f});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),f=c(n),u=i,m=f["".concat(l,".").concat(u)]||f[u]||s[u]||a;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],p={},l="HTTP Client",c={unversionedId:"reference/httpclient",id:"reference/httpclient",title:"HTTP Client",description:"Overview",source:"@site/docs/reference/httpclient.md",sourceDirName:"reference",slug:"/reference/httpclient",permalink:"/reference/httpclient",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/reference/httpclient.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Packages",permalink:"/reference/packages"},next:{title:"HTTP Framework",permalink:"/reference/framework/http-framework"}},s={},d=[{value:"Overview",id:"overview",level:2},{value:"HttpClient",id:"httpclient",level:3}],f={toc:d};function u(e){var t=e.components,p=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},f,p,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"http-client"},"HTTP Client"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Dark is designed for interacting with 3rd party APIs over HTTP. The\n",(0,a.kt)("inlineCode",{parentName:"p"},"HttpClient::")," module has a set of functions for calling out to other HTTP\nservices and APIs."),(0,a.kt)("h3",{id:"httpclient"},"HttpClient"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"HttpClient::")," supports the core verbs: ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"PATCH"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"PUT"),", and\n",(0,a.kt)("inlineCode",{parentName:"p"},"DELETE"),", as well as ",(0,a.kt)("inlineCode",{parentName:"p"},"OPTIONS"),". Each takes 3-4 parameters: ",(0,a.kt)("inlineCode",{parentName:"p"},"uri"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"query"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"body"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"header"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"DELETE"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"OPTIONS")," do not take a body."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"HttpClientPost",src:n(11710).Z,width:"1438",height:"206"})),(0,a.kt)("p",null,"There are built-in header functions for commonly used headers, including for\nauthentication (",(0,a.kt)("inlineCode",{parentName:"p"},"HttpClient::basicAuth")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"HttpClient::BearerToken"),") and\ncontent types for plain text, JSON, HTML, and forms. Headers are dictionaries;\nto combine two headers, use ",(0,a.kt)("inlineCode",{parentName:"p"},"Dict::merge"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"HttpClientPost",src:n(35890).Z,width:"1776",height:"320"})))}u.isMDXComponent=!0},35890:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/header-3298dd4dc7942a0bc68d8e2f4641a593.png"},11710:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/httpclientpost-7dd998f9674f2bffb1276f6f7cd8f866.png"}}]);