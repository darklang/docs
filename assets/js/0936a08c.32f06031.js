"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1278],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),c=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,m=p["".concat(u,".").concat(f)]||p[f]||s[f]||a;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),o=["components"],l={title:"Adding a built-in function"},u=void 0,c={unversionedId:"contributing/adding-a-function",id:"contributing/adding-a-function",title:"Adding a built-in function",description:'Adding a built-in or "Standard Library Function" is usually straight-forward',source:"@site/docs/contributing/adding-a-function.md",sourceDirName:"contributing",slug:"/contributing/adding-a-function",permalink:"/contributing/adding-a-function",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/contributing/adding-a-function.md",tags:[],version:"current",frontMatter:{title:"Adding a built-in function"},sidebar:"Contributing",previous:{title:"If you don't know our stack (F#)",permalink:"/contributing/if-you-dont-know-our-stack"},next:{title:"Adding a language feature",permalink:"/contributing/adding-a-language-feature"}},d={},s=[{value:"Define the function",id:"define-the-function",level:2},{value:"Add tests covering the function",id:"add-tests-covering-the-function",level:2},{value:"Test the function in the editor",id:"test-the-function-in-the-editor",level:2}],p={toc:s};function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'Adding a built-in or "Standard Library Function" is usually straight-forward\ninvolving implementation and testing only in the backend.'),(0,a.kt)("p",null,"(This document is in-progress and needs work)"),(0,a.kt)("h2",{id:"define-the-function"},"Define the function"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Determine where the function should live",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If the function is required to be run in the backend (e.g. to connect to a\ndatabase), then ",(0,a.kt)("inlineCode",{parentName:"li"},"BackendOnlyStdLib")," is appropriate"),(0,a.kt)("li",{parentName:"ul"},"Otherwise the function may live within ",(0,a.kt)("inlineCode",{parentName:"li"},"LibExecutionStdLib"),". This is where\nmost pure functions live, such as ",(0,a.kt)("inlineCode",{parentName:"li"},"Int::absoluteValue")))),(0,a.kt)("li",{parentName:"ul"},"Implement the function generally speaking, you should be able to copy/paste an\nexisting function and adjust from there intuitively",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"name"),(0,a.kt)("li",{parentName:"ul"},"params and return type"),(0,a.kt)("li",{parentName:"ul"},"description/docs"),(0,a.kt)("li",{parentName:"ul"},"function implementation"),(0,a.kt)("li",{parentName:"ul"},"sqlSpec. (usually ok to ",(0,a.kt)("inlineCode",{parentName:"li"},"NotImplementedTodo"),")"),(0,a.kt)("li",{parentName:"ul"},"previewable - Pure, Impure, or ImpurePreviewable?"),(0,a.kt)("li",{parentName:"ul"},"deprecated - NotDeprecated"))),(0,a.kt)("li",{parentName:"ul"},"Should some other function be deprecated in favor of this? If you're creating\na new version of an existing function, probably yes.")),(0,a.kt)("h2",{id:"add-tests-covering-the-function"},"Add tests covering the function"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Most pure functions are testable solely with execution test files they don't\nrequire recompilation consider test file. Refer to\n",(0,a.kt)("inlineCode",{parentName:"li"},"backend/testfiles/execution"),"."),(0,a.kt)("li",{parentName:"ul"},"Other functions may require more nuanced testing in ",(0,a.kt)("inlineCode",{parentName:"li"},"backend/tests/Tests"),".")),(0,a.kt)("h2",{id:"test-the-function-in-the-editor"},"Test the function in the editor"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"try it out! Does it generally work as expected?"),(0,a.kt)("li",{parentName:"ul"},"if it's a Pure (or ImpurePreviewable?) function, check to see if Analysis\nbehaves appropriately (e.g. does evaluating the function require a you\nclicking the 'Play' button in the Editor?)")))}f.isMDXComponent=!0}}]);