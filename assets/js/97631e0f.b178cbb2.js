"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8317],{3905:(t,e,a)=>{a.d(e,{kt:()=>h});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var l=n.createContext({}),d=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),h=d(a),u=r,m=h["".concat(l,".").concat(u)]||h[u]||c[u]||o;return a?n.createElement(m,i(i({ref:e},p),{},{components:a})):n.createElement(m,i({ref:e},p))}));function h(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,i=new Array(o);i[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},75198:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],s={title:"Tutorial: Save data to a Datastore",sidebar_label:"Save data to a Datastore",id:"save-data-to-datastore"},l=void 0,d={unversionedId:"tutorials/save-data-to-datastore",id:"tutorials/save-data-to-datastore",title:"Tutorial: Save data to a Datastore",description:"In the last section, we made a HTTP request that created a 404. We'll use _the",source:"@site/docs/tutorials/04-save-data-to-datastore.md",sourceDirName:"tutorials",slug:"/tutorials/save-data-to-datastore",permalink:"/tutorials/save-data-to-datastore",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/tutorials/04-save-data-to-datastore.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Tutorial: Save data to a Datastore",sidebar_label:"Save data to a Datastore",id:"save-data-to-datastore"},sidebar:"docs",previous:{title:"Create a tool in a REPL",permalink:"/tutorials/create-tool-repl"},next:{title:"Create a daily job with a Cron handler",permalink:"/tutorials/create-daily-job-cron-handler"}},c={},p=[],h={toc:p};function u(t){var e=t.components,s=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,n.Z)({},h,s,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In the last section, we made a HTTP request that created a 404. We'll use ",(0,o.kt)("em",{parentName:"p"},"the\ntrace")," of that HTTP request to build an endpoint, a technique we call ",(0,o.kt)("strong",{parentName:"p"},"Trace\nDriven Development"),"."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to the 404 section of the sidebar and you should see the HTTP request that\nyou just made with your REPL.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Hit the plus (+) button next to the 404. This creates a HTTP endpoint with\nthe HTTP method (",(0,o.kt)("inlineCode",{parentName:"p"},"POST"),") and path (",(0,o.kt)("inlineCode",{parentName:"p"},"/test"),") set from the request that creates\nthe 404."))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.44.54_AM.png",src:a(42034).Z,width:"1890",height:"782"})),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Hover over the white dot on the left hand side. Here, you can see the full\nbody of the incoming trace from when you posted to the endpoint from the\nREPL, including the body.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.45.57_AM.png",src:a(19204).Z,width:"1494",height:"1204"})),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Let's save the ",(0,o.kt)("inlineCode",{parentName:"li"},"request")," body to a variable by typing\n",(0,o.kt)("inlineCode",{parentName:"li"},"let data = request.body"),". The autocomplete knows the field names of\n",(0,o.kt)("inlineCode",{parentName:"li"},"request")," from the trace, and will complete them for you.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.47.10_AM.png",src:a(64234).Z,width:"1040",height:"240"})),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},'Let\'s put this in a datastore. Type "DB" to bring up a list of Darklang\ndatastore functions.')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.48.24_AM.png",src:a(91266).Z,width:"1414",height:"530"})),(0,o.kt)("p",null,"In this case, we want ",(0,o.kt)("inlineCode",{parentName:"p"},"DB::set"),", which takes three arguments."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.48.51_AM.png",src:a(58342).Z,width:"1060",height:"256"})),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Now let's make our datastore. Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl-k"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"Cmd-k"),' to bring up the omnibox,\nand create a new datastore called "Requests", with fields ',(0,o.kt)("inlineCode",{parentName:"li"},"data")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"time"),".")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/datastore.png",src:a(16582).Z,width:"774",height:"278"})),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Now that we have a datastore, let's finish our post endpoint."),(0,o.kt)("p",{parentName:"li"},"The first argument is the record we're inserting. This needs to match the\nschema, and so it needs to include both ",(0,o.kt)("inlineCode",{parentName:"p"},"date")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"time")," (you cannot insert\nrecords that are missing fields). Insert our data from above (seeing the live\nvalue to the left) and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Date::now")," function to get the ",(0,o.kt)("inlineCode",{parentName:"p"},"time")," field."))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.57.58_AM.png",src:a(55593).Z,width:"1058",height:"438"})),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"We need a unique key for each record that we store. The ",(0,o.kt)("inlineCode",{parentName:"li"},"DB::generateKey"),"\nfunction generates random keys ","\u2013"," this is useful when your record has no\nobvious unique identifier.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_10.59.24_AM.png",src:a(71059).Z,width:"842",height:"484"})),(0,o.kt)("ol",{start:8},(0,o.kt)("li",{parentName:"ol"},"The final argument is the Datastore: ",(0,o.kt)("inlineCode",{parentName:"li"},"Requests"),".")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_11.00.04_AM.png",src:a(95903).Z,width:"1096",height:"710"})),(0,o.kt)("ol",{start:9},(0,o.kt)("li",{parentName:"ol"},"To call the ",(0,o.kt)("inlineCode",{parentName:"li"},"DB::set")," function, we first need to run the two functions with\nside effects (",(0,o.kt)("inlineCode",{parentName:"li"},"DB::generateKey")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"Date::now"),") by hitting the play button.\nAfter hitting those two play buttons, the ",(0,o.kt)("inlineCode",{parentName:"li"},"DB::set")," play button will be\nenabled:")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_11.00.55_AM.png",src:a(17138).Z,width:"834",height:"434"})),(0,o.kt)("ol",{start:10},(0,o.kt)("li",{parentName:"ol"},"Finally, hitting the play button for ",(0,o.kt)("inlineCode",{parentName:"li"},"DB::set")," inserts the record into the\ndatastore. This locks the datastore, preventing us from changing the schema,\nwhich we see indicated by the red lock (\ud83d\udd12) icon.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img/gettingstarted/Screen_Shot_2020-02-11_at_11.01.32_AM.png",src:a(97186).Z,width:"936",height:"730"})),(0,o.kt)("p",null,"Congratulations! You've created a Darklang Datastore and stored data inside it."))}u.isMDXComponent=!0},42034:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.44.54_AM-c35473b6dfa9e5e984e6c497c4948e03.png"},19204:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.45.57_AM-8b17b971fe9747128d7c1727dd0c2b35.png"},64234:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.47.10_AM-e5c3345e0e4829d3bc00434b91af58eb.png"},91266:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.48.24_AM-8d398f548be064fee18156e499c7c30f.png"},58342:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.48.51_AM-d65c3a3c6bbf857e9f0253221e0c2252.png"},55593:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.57.58_AM-f9ccb9d544162a11defc7e20bcc5ea43.png"},71059:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_10.59.24_AM-5c778802071561f8d56509c54f32fb70.png"},95903:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_11.00.04_AM-f3d0b9106b682171db316604ac028bf0.png"},17138:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_11.00.55_AM-2f4c3e09ce0ebdfeb8d9c7b7329e6ade.png"},97186:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Screen_Shot_2020-02-11_at_11.01.32_AM-2a8cc63ff21c7e9cefa65a72268eb83d.png"},16582:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/datastore-4ddeab6316dd6d42a9f40131e5aab4d8.png"}}]);