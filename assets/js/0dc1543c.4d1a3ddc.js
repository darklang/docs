"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[649],{3905:(e,t,a)=>{a.d(t,{kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),m=n,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(k,o(o({ref:t},p),{},{components:a})):r.createElement(k,o({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},66941:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),o=["components"],s={},l="Backward compatibility",c={unversionedId:"reference/backward-compatibility",id:"reference/backward-compatibility",title:"Backward compatibility",description:"We aim to keep Dark's behavior consistent and backwards compatible, in order to",source:"@site/docs/reference/backward-compatibility.md",sourceDirName:"reference",slug:"/reference/backward-compatibility",permalink:"/reference/backward-compatibility",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/reference/backward-compatibility.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Terms of Service / SLA",permalink:"/reference/terms-of-service"},next:{title:"Desktop Client",permalink:"/reference/desktop-client"}},d={},p=[{value:"Serialized Dark values",id:"serialized-dark-values",level:2},{value:"Dictionaries and Database ordering",id:"dictionaries-and-database-ordering",level:2},{value:"Unicode",id:"unicode",level:2},{value:"Language/framework behavior",id:"languageframework-behavior",level:2},{value:"HTTP / Transport",id:"http--transport",level:2},{value:"Timeouts",id:"timeouts",level:2},{value:"Private APIs",id:"private-apis",level:2}],u={toc:p};function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"backward-compatibility"},"Backward compatibility"),(0,i.kt)("p",null,"We aim to keep Dark's behavior consistent and backwards compatible, in order to\nprevent your programs from changing without your knowledge. Sometimes cannot\nachieve this due to the underlying technology (e.g. HTTP servers and proxies,\nJSON parsers/serializers, etc) that we are built-on top of."),(0,i.kt)("h2",{id:"serialized-dark-values"},"Serialized Dark values"),(0,i.kt)("p",null,"Dark serialized values appear in HTTP responses, in functions like ",(0,i.kt)("inlineCode",{parentName:"p"},"toString"),"\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"Dict::toJSON"),", and are sent to servers using ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClient::")," functions."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dark may change the formatting of values as they are serialized to users.\nTypically, we will only do this to correct incorrect behavior.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dark tries to generate standard JSON. We don't always, and where we generate\nnon-standard JSON, we may switch to generating more standard JSON.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"We may switch the format of JSON (indentation, spacing, etc), at any point to\nmake it prettier.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dark serializes integers to JSON as integers, even when they are larger than\nstandard JSON values.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Dark does not promise to parse non-standard JSON (it may do so in some cases,\nplease do not rely on this). Where Dark does parse non-standard JSON, it may\nstop doing so without warning."))),(0,i.kt)("h2",{id:"dictionaries-and-database-ordering"},"Dictionaries and Database ordering"),(0,i.kt)("p",null,"When fetching lists of data from databases, or converting dictionaries or sets\nto lists, we make no promises as to the ordering of values, and may change them\nwithout warning."),(0,i.kt)("h2",{id:"unicode"},"Unicode"),(0,i.kt)("p",null,"Unicode is a moving standard, and Dark strings will upgrade behind the scenes\nbased on the latest standard. The changes will not necessarily happen in\nbackwards compatible ways."),(0,i.kt)("h2",{id:"languageframework-behavior"},"Language/framework behavior"),(0,i.kt)("p",null,"Error messages in Dark may change at any time. We recommend that you do not use\nDark error messages as user-facing values, or if you do, set expectations that\nthey may change."),(0,i.kt)("h2",{id:"http--transport"},"HTTP / Transport"),(0,i.kt)("p",null,"Dark may move to newer version of HTTP (HTTP/2, HTTP3) without warning and\nwithout maintaining exact HTTP/1.1 compatibility."),(0,i.kt)("h2",{id:"timeouts"},"Timeouts"),(0,i.kt)("p",null,"Not all parts of Dark have timeouts, but we may add or change timeouts to make\nthe service run better."),(0,i.kt)("h2",{id:"private-apis"},"Private APIs"),(0,i.kt)("p",null,"Dark's APIs (such as those used in the editor) are private and may change at any\ntime. Feel free to use them, but do not rely on them in any way. If you wish to\nbuild on them, please contact us and we may be able to find ways to help."))}m.isMDXComponent=!0}}]);