"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5840],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2787:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=["components"],o={title:"Tutorial: Call an external API",sidebar_label:"Call an external API",id:"call-external-api"},s=void 0,p={unversionedId:"tutorials/call-external-api",id:"tutorials/call-external-api",title:"Tutorial: Call an external API",description:"Dark has built-in standard libraries for working with external HTTP Calls",source:"@site/docs/tutorials/08-call-external-api.md",sourceDirName:"tutorials",slug:"/tutorials/call-external-api",permalink:"/tutorials/call-external-api",draft:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs/tutorials/08-call-external-api.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Tutorial: Call an external API",sidebar_label:"Call an external API",id:"call-external-api"},sidebar:"docs",previous:{title:"Extract code into a Function",permalink:"/tutorials/extract-function"},next:{title:"Complete your first application",permalink:"/tutorials/complete-first-application"}},c={},d=[],u={toc:d};function m(e){var t=e.components,o=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Dark has built-in standard libraries for working with external HTTP Calls\n(",(0,i.kt)("inlineCode",{parentName:"p"},"HTTP")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpClient"),"). This allows you to work with any external REST APIs."),(0,i.kt)("p",null,"In this Tutorial, we'll send the Daily Report we created to Airtable, so other\nteam members can see it."),(0,i.kt)("p",null,"If you don't feel like setting up an Airtable account, this step can be safely\nskipped, and you can continue to the ",(0,i.kt)("a",{parentName:"p",href:"./complete-first-application"},"final step"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Set up Airtable (~10 minutes).")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("a",{parentName:"li",href:"https://airtable.com"},"Airtable")," and create a new base."),(0,i.kt)("li",{parentName:"ul"},"In the base, create two columns, one for date (field type is date) and one for\nrequests (field type is number). You can see our sample\n",(0,i.kt)("a",{parentName:"li",href:"https://airtable.com/invite/l?inviteId=invOadxgcpBKaCQiv&inviteToken=e7492a049bf7e4cd1c475b43efac35d296578f66198bff549ca99af6ee5821b4"},"here"),".\n",(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(19308).Z,width:"872",height:"508"})),(0,i.kt)("li",{parentName:"ul"},"Generate an API key on the ",(0,i.kt)("a",{parentName:"li",href:"https://airtable.com/account"},"Account page"),". Put\nthe API key in a function in your Dark canvas.\n",(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(92702).Z,width:"1388",height:"414"})),(0,i.kt)("li",{parentName:"ul"},"Airtable's full API documentation for your base will be available on the\n",(0,i.kt)("a",{parentName:"li",href:"https://airtable.com/api"},"API page"),". Within this page, go to Create Records\nin the left hand navigation to copy the URI from the right hand side.\n",(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(20808).Z,width:"1150",height:"616"}))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Add the HTTP POST call to the ",(0,i.kt)("inlineCode",{parentName:"li"},"storeReport")," worker so it will run\nasynchronously. Hit ",(0,i.kt)("inlineCode",{parentName:"li"},"return")," after the ",(0,i.kt)("inlineCode",{parentName:"li"},"Db::set")," function. ",(0,i.kt)("inlineCode",{parentName:"li"},"DB::set")," will\nstill run as a side effect, and we can add the new function.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(85592).Z,width:"960",height:"938"})),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::post")," function takes four arguments. Paste the URI from\nAirtable from the base into the first argument.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(97478).Z,width:"1006",height:"1064"})),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Above ",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::post")," declare a new variable, ",(0,i.kt)("inlineCode",{parentName:"li"},"airtable_header"),". Use the\n",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::bearerToken")," and pass your API key function as the argument.\nThen, pipe ",(0,i.kt)("inlineCode",{parentName:"li"},"|>")," into ",(0,i.kt)("inlineCode",{parentName:"li"},"Dict::merge")," and merge with\n",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::jsonContentType"),". The ",(0,i.kt)("inlineCode",{parentName:"li"},"airtable_header")," will now be a nicely\nformatted header for the Airtable API.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(29026).Z,width:"1714",height:"360"})),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The query can be empty for this particular request, but we do need to provide\nan argument, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"{}"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the information from the report to the body (the date and number of\nrequests). Airtable expects the following format:\n",(0,i.kt)("inlineCode",{parentName:"p"},"records : [{fields : {Date : date, Requests : count}}]")))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(21205).Z,width:"1116",height:"470"})),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"Run the API request in the editor by hitting the play button next to\n",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::post"),". If the request is successful, a success will be returned\nand you'll see the record in your Airtable base.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(98488).Z,width:"1698",height:"518"})),(0,i.kt)("p",null,"If the request is not successful, the error message will be displayed in line,\nand you'll see the ",(0,i.kt)("inlineCode",{parentName:"p"},"Error")," on the error rail. In this case, the format of the\ndate passed did not expect what Airtable expected."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gettingstarted/newworker.png",src:a(73834).Z,width:"1690",height:"470"})),(0,i.kt)("ol",{start:8},(0,i.kt)("li",{parentName:"ol"},"Each time your cron runs (daily, or when triggered) a record will be added to\nyour Airtable base.")))}m.isMDXComponent=!0},19308:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/airtable_base-522019e75989057f53800784a8e40418.png"},92702:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/airtable_key-d88e1cd7d36e23e4aec19190d9198c7c.png"},20808:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/airtable_url-26369ed16786fa952cec9d4d6a7ac78a.png"},21205:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/api_body-8d49c381476818e09814d8f7b2258780.png"},73834:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/api_error-932e1cd6d9c7cec4c0960f7cce14ebf1.png"},29026:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/api_header-6220c617bd04d7153c678401a801f72e.png"},97478:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/api_httpclientpost-71172c71b0cee15af314c7d4c033e0f3.png"},98488:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/api_success-319ae39f168e2ea49440be94c02c77ab.png"},85592:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/apiworker_newline-1200cb0ac3fc517b5d5ecb0dd3544d8e.png"}}]);