"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8673],{91369:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var s=t(85893),a=t(11151);const l={title:"Walk-through: Create a New Trello Card from Slack",sidebar_label:"Trello: Create a new card from Slack"},i=void 0,r={id:"walk-throughs/slack-trello",title:"Walk-through: Create a New Trello Card from Slack",description:"Connecting your Trello account with your Slack account can make for a powerful",source:"@site/docs-classic/walk-throughs/slack-trello.md",sourceDirName:"walk-throughs",slug:"/walk-throughs/slack-trello",permalink:"/walk-throughs/slack-trello",draft:!1,unlisted:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs-classic/walk-throughs/slack-trello.md",tags:[],version:"current",frontMatter:{title:"Walk-through: Create a New Trello Card from Slack",sidebar_label:"Trello: Create a new card from Slack"},sidebar:"docs",previous:{title:"Asana: create tasks and projects from Slack",permalink:"/walk-throughs/slack-asana"},next:{title:"Twilio: send and receive texts",permalink:"/walk-throughs/twilio-app"}},o={},c=[{value:"Trello Configuration",id:"trello-configuration",level:2},{value:"Slack Configuration",id:"slack-configuration",level:2},{value:"Building in Darklang",id:"building-in-darklang",level:2},{value:"Handling Lists",id:"handling-lists",level:3},{value:"Making input easier with modals",id:"making-input-easier-with-modals",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Connecting your Trello account with your Slack account can make for a powerful\ntool - no more switching tabs and hunting for the right Trello list when you\nwant to capture the excellent idea that just came up. In this tutorial, we'll\nshow you a few ways to enable your team to create new Trello cards directly from\nSlack."}),"\n",(0,s.jsx)(n.h2,{id:"trello-configuration",children:"Trello Configuration"}),"\n",(0,s.jsx)(n.p,{children:"For this tutorial, you're going to need to grab a few different things from\nTrello and store each of them as separate functions in Darklang:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Your Trello API Key and Token,\n",(0,s.jsx)(n.a,{href:"https://trello.com/app-key/",children:"available on this page after logging in"})]}),"\n",(0,s.jsxs)(n.li,{children:["Your Trello org id, the id for one of your boards, and the id for one of your\nlists, which we will refer to as our ",(0,s.jsx)(n.code,{children:"defaultListID"})," throughout the tutorial.\nThe best way to get all of these at once is to add ",(0,s.jsx)(n.code,{children:".json"})," to the end of the\nURL on one of your boards, and search through the resulting JSON for the ",(0,s.jsx)(n.code,{children:"id"}),"\nthat matches with the name of your board, the ",(0,s.jsx)(n.code,{children:"id"})," that matches with the name\nof the list you'd like to use and ",(0,s.jsx)(n.code,{children:"idOrganization"}),". Don't worry - we'll cover\nan easier way to handle this later in the tutorial."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"slack-configuration",children:"Slack Configuration"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://api.slack.com/apps",children:"Create a new app in Slack"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Set a Slash command (the option should appear under ",(0,s.jsx)(n.strong,{children:"Add features &\nfunctionality"})," on your app's main page). Your ",(0,s.jsx)(n.code,{children:"Request URL"})," should look\nsomething like\n",(0,s.jsx)(n.code,{children:"https://yourusername-yourcanvasname.builtwithdark.com/new-trello-card"}),". This\nis the URL that Slack will call when you use your slash command - don't add\nanything to your Darklang canvas just yet. Also note our usage hint - a card\nname and card description, separated by a ",(0,s.jsx)(n.code,{children:"|"})," symbol."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/slashcommand.png",src:t(68066).Z+"",width:"500",height:"632"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Add the following scopes to your app: ",(0,s.jsx)(n.code,{children:"chat:write"}),", ",(0,s.jsx)(n.code,{children:"chat:write.public"}),",\n",(0,s.jsx)(n.code,{children:"commands"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/scopes.png",src:t(14620).Z+"",width:"1330",height:"914"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Install your app to the workspace (either via ",(0,s.jsx)(n.strong,{children:"Settings -> Basic\nInformation"})," or ",(0,s.jsx)(n.strong,{children:"Settings -> Install App"}),"). Since this app is being built\nfor your workspace specifically, we will not need to set up full OAuth, like\nwe would if we wanted to distribute this more publicly."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Copy your bot user access token, which will now be available under ",(0,s.jsx)(n.strong,{children:"Settings\n-> Install"})," app and save it as a function in your Darklang canvas. Use this\nfunction wherever you see ",(0,s.jsx)(n.code,{children:"slackToken"})," in the code examples."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"building-in-darklang",children:"Building in Darklang"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Attempt to use your slash command. Make sure to include some text after your\nslash command, separated by a | symbol."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/fullslashcommand.png",src:t(51862).Z+"",width:"790",height:"222"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/httperror.png",src:t(91954).Z+"",width:"904",height:"156"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Navigate to your Darklang canvas and check the 404s section in the sidebar -\nyou should see an HTTP POST created called ",(0,s.jsx)(n.code,{children:"/new-trello-card"})," (or whatever\nyou used when setting up your slash command). Click the plus sign to add it\nto your canvas."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/404.png",src:t(93161).Z+"",width:"632",height:"130"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Once it's on your canvas, you can place your carat over the trace on the left\n(the white dot) to see the incoming data Slack attempted to send."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/trace.png",src:t(77700).Z+"",width:"1428",height:"206"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["In the body of your trace data, you will see a text field in the body. This\nis what we want to parse to get the name and description of the card we're\ngoing to create. In order to parse this information, we're going to use\n",(0,s.jsx)(n.code,{children:"String::split"})," and parse on the special character ",(0,s.jsx)(n.code,{children:"|"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/stringsplit.png",src:t(91613).Z+"",width:"1534",height:"230"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Now that we have a list of ",(0,s.jsx)(n.code,{children:"messageContent"}),", we can use ",(0,s.jsx)(n.code,{children:"List::getAt"})," to set\nthe name and description of the card."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/listgetat.png",src:t(92957).Z+"",width:"1288",height:"310"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsxs)(n.li,{children:["Once we have all of the information we need, we can use the Darklang package\nmanager\n",(0,s.jsxs)(n.a,{href:"/reference/packages#createNewCard",children:[(0,s.jsx)(n.code,{children:"Trello::createNewCard"})," function"]})," to\ncreate the new card. For simplicity's sake, we're going to use the\n",(0,s.jsx)(n.code,{children:"defaultListID"})," we set earlier, as well as the ",(0,s.jsx)(n.code,{children:"trelloKey"})," and ",(0,s.jsx)(n.code,{children:"trelloToken"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/trellonewcard.png",src:t(97564).Z+"",width:"1702",height:"322"})}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsx)(n.li,{children:"Re-run your HTTP handler, or call the slash command again and then check\nTrello - your new card will have been created in the list you specified."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/newcard.png",src:t(17437).Z+"",width:"542",height:"308"})}),"\n",(0,s.jsx)(n.h3,{id:"handling-lists",children:"Handling Lists"}),"\n",(0,s.jsx)(n.p,{children:"In the future, you probably won't want to worry about hunting around for your\nlist ids. We've made it easy for you to create your own lookup table to match\nlist names and ids."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.code,{children:"Lists"})," db."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/listdb.png",src:t(96013).Z+"",width:"786",height:"294"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Now, we can use built in Darklang package manager functions to get a list of\nall of our Trello lists and add them to our DB. Create a REPL called\n",(0,s.jsx)(n.code,{children:"addListsToDB"}),", add the following lines of code, and run it:"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/addliststodb.png",src:t(6040).Z+"",width:"1598",height:"188"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Let's try another slash command, this time with more information - specifying\nthe name of a list to add the card to."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/slashcommandlist.png",src:t(8600).Z+"",width:"784",height:"172"})}),"\n",(0,s.jsxs)(n.ol,{start:"15",children:["\n",(0,s.jsxs)(n.li,{children:["Now ",(0,s.jsx)(n.code,{children:"messageContent"})," will have a third entry in the list."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/messagecontentwithlist.png",src:t(81516).Z+"",width:"1916",height:"312"})}),"\n",(0,s.jsxs)(n.ol,{start:"16",children:["\n",(0,s.jsxs)(n.li,{children:["Using the built in\n",(0,s.jsxs)(n.a,{href:"/reference/packages#lookuplistid",children:[(0,s.jsx)(n.code,{children:"Trello:lookUpListID"})," function"]}),", we\ncan grab the name of that list and use it in our ",(0,s.jsx)(n.code,{children:"createNewCard"})," function."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/lookuplistid.png",src:t(53330).Z+"",width:"1506",height:"348"})}),"\n",(0,s.jsx)(n.h3,{id:"making-input-easier-with-modals",children:"Making input easier with modals"}),"\n",(0,s.jsx)(n.p,{children:"Okay, this is all great, but still has some problems. What if someone forgets to\nadd the right special character? Let's make it a little easier, by creating a\nmodal to handle their input."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create a new slash command, just as we did at the beginning but with a\ndifferent name and Request URL. This allows us to build different\nfunctionality around this command without losing anything we did previously.\nI used ",(0,s.jsx)(n.code,{children:"/new-trello-card-modal"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Turn Interactivity on via ",(0,s.jsx)(n.strong,{children:"Features -> Interactivity and Shortcuts"})," and\nspecify a URL for the interaction to be sent to:"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/interactivity.png",src:t(48521).Z+"",width:"1354",height:"594"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Slack uses JSON to generate modals via a framework called Block Kit, even\nproviding a\n",(0,s.jsx)(n.a,{href:"https://api.slack.com/tools/block-kit-builder",children:"handy Block Kit builder"}),". At\nthis point, it may make sense to pause and create your modal - we'll need the\nJSON soon. The modal we're going to use has 3 fields: a single line for the\ncard name, a multiline for the card description and a select for a list of\nlists."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Now, just like before, we're going to call the Slash command and grab\nthe 404."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/newslashcommand.png",src:t(49780).Z+"",width:"960",height:"222"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Grab your ",(0,s.jsx)(n.code,{children:"trigger_id"})," from the ",(0,s.jsx)(n.code,{children:"request.body"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/triggerid.png",src:t(47005).Z+"",width:"1730",height:"132"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsxs)(n.li,{children:["Create an ",(0,s.jsx)(n.code,{children:"HttpClient::post"})," request and add your ",(0,s.jsx)(n.code,{children:"trigger_id"})," and ",(0,s.jsx)(n.code,{children:"JSON"}),".\nThese are truncated screenshots with a lot of the JSON cut out:"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/json1.png",src:t(97695).Z+"",width:"1734",height:"484"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/json2.png",src:t(12911).Z+"",width:"1724",height:"486"})}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsx)(n.li,{children:"Try your Slash command - a modal should open. Input text and try to send. You\nwill get an error message:"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/troubleconnecting.png",src:t(67316).Z+"",width:"1030",height:"1100"})}),"\n",(0,s.jsxs)(n.ol,{start:"8",children:["\n",(0,s.jsxs)(n.li,{children:["We need to work with our ",(0,s.jsx)(n.code,{children:"/interaction"})," handler, which should be available in\nyour 404s. We're going to start with parsing the payload Slack sent through:"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/payload.png",src:t(68992).Z+"",width:"880",height:"164"})}),"\n",(0,s.jsxs)(n.ol,{start:"9",children:["\n",(0,s.jsx)(n.li,{children:"We can use that payload to grab the information that you submitted in your\nmodal:"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/submittedinfo.png",src:t(35063).Z+"",width:"1526",height:"204"})}),"\n",(0,s.jsxs)(n.ol,{start:"10",children:["\n",(0,s.jsxs)(n.li,{children:["And, just like before, we'll use the ",(0,s.jsx)(n.code,{children:"Trello::lookUpListID"})," to find the\ncorrect Trello list:"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/lookuplistid2.png",src:t(95244).Z+"",width:"1524",height:"222"})}),"\n",(0,s.jsxs)(n.ol,{start:"11",children:["\n",(0,s.jsx)(n.li,{children:"All that's left is creating the new card and sending a 200 response back to\nSlack:"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/newcard200.png",src:t(50577).Z+"",width:"1526",height:"440"})}),"\n",(0,s.jsxs)(n.ol,{start:"12",children:["\n",(0,s.jsx)(n.li,{children:"Try to create a ticket again with your Slash command:"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/lasttry.png",src:t(45992).Z+"",width:"1024",height:"986"})}),"\n",(0,s.jsxs)(n.ol,{start:"13",children:["\n",(0,s.jsx)(n.li,{children:"Once you hit submit, your ticket will appear in Trello!"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"slack-apps/tutorials/new-trello-card/trelloticket.png",src:t(42417).Z+"",width:"540",height:"292"})}),"\n",(0,s.jsx)(n.p,{children:"Congratulations, you now have a Slack app that can create Trello cards in\nmultiple ways!"})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},93161:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/404-04b8042d5692b1b9212bfb79705b3563.png"},6040:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/addliststodb-6e018f08723659a73c17e49f8d32393a.png"},51862:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/fullslashcommand-b93e7a28fecee264e2f1eb3e55e943b9.png"},91954:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/httperror-9d2d6c01d9d70bcdaf8aab7b437c6c6c.png"},48521:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/interactivity-84c082b8a051e553085925cac1420c1f.png"},97695:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/json1-e584ac282e61b72ffef619d3d8e42ac6.png"},12911:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/json2-4d3198ed15ef53f622289ceed7637e39.png"},45992:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/lasttry-37f4921d016e04dcd213ff1422b45091.png"},96013:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/listdb-15f76cddb60f23cfda7278d4a3aa48aa.png"},92957:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/listgetat-a45262b5a827e711f10c9e72ed4f89a2.png"},53330:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/lookuplistid-073c84743c8b942855c1683c9fe5ae96.png"},95244:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/lookuplistid2-bece417bae672e454d748c000be3e519.png"},81516:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/messagecontentwithlist-fe01ad5cb2bc3e5c9dfa95ebf6f7d7d3.png"},17437:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/newcard-c413362bd52d0041eef64b44c29d8a6e.png"},50577:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/newcard200-160b8ff2f5753e0c0f655490228f828e.png"},49780:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/newslashcommand-e2609a03a1eab40a1fffb9c45a5b02da.png"},68992:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/payload-bcdc85af7b7e06b4cc0300940cd8f2ed.png"},14620:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/scopes-b44d7c17fabd00d9006580098ad32653.png"},68066:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/slashcommand-754d5ee33de6ae2857244b7115abcdf5.png"},8600:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/slashcommandlist-fe154035efae988f791423221489b833.png"},91613:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/stringsplit-9427bd73647e0abbfc820db2636803d8.png"},35063:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/submittedinfo-1b382af6aaf7e7bfea0906f0b90dad4c.png"},77700:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/trace-2c889034c26d623738e3d27e5620db92.png"},97564:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/trellonewcard-9d848065d8bd7d63b1ee891e467c9e61.png"},42417:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/trelloticket-fb179096854c6a3e06903fefd8154034.png"},47005:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/triggerid-ebcfc2930546af417af565f1f63e4382.png"},67316:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/troubleconnecting-67fe416864acc7e61fd41a6d36a13b5c.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var s=t(67294);const a={},l=s.createContext(a);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);