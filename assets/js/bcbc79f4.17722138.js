"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1777],{13820:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/terms-of-service","title":"Terms of Service / SLA","description":"Code of conduct / Terms of service","source":"@site/docs-classic/reference/terms-of-service.md","sourceDirName":"reference","slug":"/reference/terms-of-service","permalink":"/reference/terms-of-service","draft":false,"unlisted":false,"editUrl":"https://github.com/darklang/docs/edit/main/docs-classic/reference/terms-of-service.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"FAQs","permalink":"/reference/faqs"},"next":{"title":"Backward compatibility","permalink":"/reference/backward-compatibility"}}');var o=r(74848),t=r(28453);const a={},i="Terms of Service / SLA",c={},d=[{value:"Code of conduct / Terms of service",id:"code-of-conduct--terms-of-service",level:2},{value:"Service Level",id:"service-level",level:2}];function l(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"terms-of-service--sla",children:"Terms of Service / SLA"})}),"\n",(0,o.jsx)(n.h2,{id:"code-of-conduct--terms-of-service",children:"Code of conduct / Terms of service"}),"\n",(0,o.jsxs)(n.p,{children:["Darklang does not yet have defined terms of service. As such, ",(0,o.jsx)(n.strong,{children:"we make no\npromises at all"})," about any aspect of our service, including keeping the service\nor your programs running."]}),"\n",(0,o.jsxs)(n.p,{children:["We may disable your account ",(0,o.jsx)(n.strong,{children:"at any time"})," with no notice ",(0,o.jsx)(n.strong,{children:"for any reason"}),".\nIf we disable your account, we ",(0,o.jsx)(n.em,{children:"may"})," give you access to migrate off, or to\nresolve the issue in our service. We may not. If you're an asshole about it, act\nin bad faith in your dealings with us or the community, have violated the\n",(0,o.jsx)(n.a,{href:"https://darklang.com/code-of-conduct",children:"Code of Conduct"}),", or if we're especially\nbusy, we are less likely to do so. It is entirely up to us whether we do this or\nnot, and we choose not to do this for any reason."]}),"\n",(0,o.jsx)(n.h2,{id:"service-level",children:"Service Level"}),"\n",(0,o.jsx)(n.p,{children:"We make a best-effort attempt to keep the service up and running at all times.\nWe recommend Darklang not be used for essential services needing 99% or more\nuptime, though we typically achieve that. We make no promises at all regarding\nuptime, and have no obligations to any customer or user in this regard."}),"\n",(0,o.jsx)(n.p,{children:"We recommend that an individual canvas makes no more than 10 requests per\nsecond."}),"\n",(0,o.jsx)(n.p,{children:"We may disable part or all of a Darklang canvas which is causing issues for us\n(e.g. operational, legal, etc)."}),"\n",(0,o.jsx)(n.p,{children:"Darklang has short downtime approximately four times a year when our hosted DB\nprovider (Google Cloud SQL) performs maintenance. This is scheduled for Tuesdays\naround 8am PST, and often lasts as little as 30 seconds. We usually notify the\n#status channel in our Discord in advance, and as it happens."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var s=r(96540);const o={},t=s.createContext(o);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);