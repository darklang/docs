"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6181],{93827:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=t(85893),a=t(11151);const r={title:"Using an External DB",sidebar_label:"Using an External DB"},i=void 0,l={id:"walk-throughs/external-db",title:"Using an External DB",description:"Your project may require a more complex data structure than our datastores. If a",source:"@site/docs-classic/walk-throughs/external-db.md",sourceDirName:"walk-throughs",slug:"/walk-throughs/external-db",permalink:"/walk-throughs/external-db",draft:!1,unlisted:!1,editUrl:"https://github.com/darklang/docs/edit/main/docs-classic/walk-throughs/external-db.md",tags:[],version:"current",frontMatter:{title:"Using an External DB",sidebar_label:"Using an External DB"},sidebar:"docs",previous:{title:"Slack: send and receive messages",permalink:"/walk-throughs/slack-app"},next:{title:"Slack: check for new channels",permalink:"/walk-throughs/slack-channel-check"}},d={},c=[{value:"Set Up",id:"set-up",level:2},{value:"POST a New Record",id:"post-a-new-record",level:2},{value:"GET All Data",id:"get-all-data",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Your project may require a more complex data structure than our datastores. If a\nkey-value store works, we strongly recommend using the built-in datastore to\ntake advantage of language functions."}),"\n",(0,s.jsxs)(n.p,{children:["If you already have (or otherwise require) an external database, any external\ndatabase that provides a REST API can be used. For the purposes of this\ntutorial, we will be using ",(0,s.jsx)(n.a,{href:"https://restdb.io",children:"restdb.io"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"set-up",children:"Set Up"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a new database."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/create-db.png",src:t(8482).Z+"",width:"1202",height:"706"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Select ",(0,s.jsx)(n.strong,{children:"Developer Mode"})," in the upper right, and then choose\n",(0,s.jsx)(n.strong,{children:"Collections +"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/add-collection.png",src:t(33190).Z+"",width:"494",height:"184"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Enter the information for your new collection and click ",(0,s.jsx)(n.strong,{children:"Save"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/collection.png",src:t(2600).Z+"",width:"1870",height:"608"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Add Name and Description text fields to your database by clicking ",(0,s.jsx)(n.strong,{children:"Add\nFields +"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/add-field.png",src:t(93195).Z+"",width:"1306",height:"762"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/fields.png",src:t(10867).Z+"",width:"858",height:"272"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Grab your API Key by clicking on API Docs and finding the value labeled\n",(0,s.jsx)(n.code,{children:"x-apikey:"}),". Save it as a function in your Darklang canvas."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Optionally, also grab the URL at the top of your page (in my case, its\n",(0,s.jsx)(n.code,{children:"https://mydatastore-e7f9.restdb.io/rest/mydata"}),") and save it as another\nfunction in your Darklang canvas."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"post-a-new-record",children:"POST a New Record"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create your header by doing a ",(0,s.jsx)(n.code,{children:"Dict::merge"})," on ",(0,s.jsx)(n.code,{children:"HttpClient::jsonContentType"}),"\nand a dict containing your API Key"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Write an ",(0,s.jsx)(n.code,{children:"HttpClient::post"})," using your URL, your fields (note: the field\nnames are case sensitive) and your header, and then run it."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/post.png",src:t(96389).Z+"",width:"866",height:"470"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Your data will appear in the restdb.io console."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/data.png",src:t(87023).Z+"",width:"1242",height:"514"})}),"\n",(0,s.jsx)(n.h2,{id:"get-all-data",children:"GET All Data"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create your header by doing a ",(0,s.jsx)(n.code,{children:"Dict::merge"})," on ",(0,s.jsx)(n.code,{children:"HttpClient::jsonContentType"}),"\nand a dict containing your API Key."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Write an ",(0,s.jsx)(n.code,{children:"HttpClient::get"})," using your URL and header, and then run it."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/get-all.png",src:t(3055).Z+"",width:"852",height:"248"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Your handler will return all of the data in your database."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"external-db/get-all-data.png",src:t(46970).Z+"",width:"850",height:"512"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},33190:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/add-collection-3f0268f75a42ba237d197c9360f47a95.png"},93195:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/add-fields-bd9d26259448edc2a92e1ddced81d397.png"},2600:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/collection-59dc3def7f43cbf0eb818f4fb819e4ec.png"},8482:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/create-db-d316810fc0eebe61d755eb2a8ace517a.png"},87023:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/data-7a8597fd4f2f0761fd78a618b398469b.png"},10867:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/fields-65a30b94200466c94e611b87b51075b1.png"},46970:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/get-all-data-8574723c04faa137fe83052b3f5180d6.png"},3055:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/get-all-ce16aaff39428d1f299766e53f8861d5.png"},96389:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/post-2c16967791e6257b8a8ed520356d12c9.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>i});var s=t(67294);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);