"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},33075:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>d,toc:()=>c,default:()=>u});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={title:"Tutorial: Create a daily job with a Cron handler",sidebar_label:"Create a daily job with a Cron handler",id:"create-daily-job-cron-handler"},s=void 0,d={unversionedId:"tutorials/create-daily-job-cron-handler",id:"tutorials/create-daily-job-cron-handler",title:"Tutorial: Create a daily job with a Cron handler",description:'Now that we\'re storing requests, we can use a scheduled job (a "Cron", named',source:"@site/docs/tutorials/05-create-daily-job-cron-handler.md",sourceDirName:"tutorials",slug:"/tutorials/create-daily-job-cron-handler",permalink:"/tutorials/create-daily-job-cron-handler",editUrl:"https://github.com/darklang/docs/edit/main/docs/tutorials/05-create-daily-job-cron-handler.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Tutorial: Create a daily job with a Cron handler",sidebar_label:"Create a daily job with a Cron handler",id:"create-daily-job-cron-handler"},sidebar:"docs",previous:{title:"Save data to a Datastore",permalink:"/tutorials/save-data-to-datastore"},next:{title:"Process background jobs in a Worker",permalink:"/tutorials/process-background-jobs-worker"}},c=[],p={toc:c};function u(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'Now that we\'re storing requests, we can use a scheduled job (a "Cron", named\nafter the Unix ',(0,i.kt)("inlineCode",{parentName:"p"},"cron")," utility) to create a report of all requests per day."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Hit the plus (",(0,i.kt)("inlineCode",{parentName:"li"},"+"),") button (or use the omnibox) to create a new Cron. Set it\nto run daily, and with the name ",(0,i.kt)("inlineCode",{parentName:"li"},"DailyReport"),".")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/crondaily.png",src:n(85391).Z,width:"896",height:"198"})),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To know if a request was executed today, we compare it to the current time.\nLet's assign the current time in seconds to a variable ",(0,i.kt)("inlineCode",{parentName:"p"},"timeSeconds"),". The\ncurrent time in seconds is ",(0,i.kt)("inlineCode",{parentName:"p"},"Date::now"),", piped into ",(0,i.kt)("inlineCode",{parentName:"p"},"Date::toSeconds"),". (Note:\nto create a pipe, type ",(0,i.kt)("inlineCode",{parentName:"p"},"|>")," after the ",(0,i.kt)("inlineCode",{parentName:"p"},"Date::now")," function)."),(0,i.kt)("p",{parentName:"li"},"Run the ",(0,i.kt)("inlineCode",{parentName:"p"},"Date::now")," function to see a live value for your code."))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/cron_timeseconds.png",src:n(64568).Z,width:"822",height:"244"})),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Next, we'll need to filter the reports to just today's reports. Set\n",(0,i.kt)("inlineCode",{parentName:"li"},"allRequests")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"DB::getAll Requests"),". Run the function to the live value\nfor ",(0,i.kt)("inlineCode",{parentName:"li"},"allRequests"),".")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/allrequests.png",src:n(40696).Z,width:"1412",height:"806"})),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"To see only today's requests, use ",(0,i.kt)("inlineCode",{parentName:"li"},"List::filter"),". ",(0,i.kt)("inlineCode",{parentName:"li"},"List::filter")," takes two\narguments - the list to filter (in this case ",(0,i.kt)("inlineCode",{parentName:"li"},"allRequests"),") and an anonymous\nfunction that determines if each element of the list element should be\nincludes in the new list. ",(0,i.kt)("inlineCode",{parentName:"li"},"List::filter")," is similar to ",(0,i.kt)("inlineCode",{parentName:"li"},"List::map")," and the\nconcept is explained in more detail\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.darklang.com/discussion/functional-aspects"},"here"),".")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/listefilter.png",src:n(72708).Z,width:"1064",height:"320"})),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"We want to keep only reports that occurred today, meaning we want to compare\nthe report's time to ",(0,i.kt)("inlineCode",{parentName:"li"},"timeSeconds")," that we created earlier. Let's convert the\ntime of the request into seconds so that both times have the same units.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/requestseconds.png",src:n(54652).Z,width:"1194",height:"430"})),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"Next, we calculate the difference from the current time; this tells us if it\nhappened today (in the last 86,400 seconds).")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/comparison.png",src:n(23605).Z,width:"1296",height:"488"})),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"To see this work, it's helpful to have a recent request. If you paused in the\ntutorial, re-run the ",(0,i.kt)("inlineCode",{parentName:"li"},"HttpClient::post")," function from the REPL. Then, when\nyou place your cursor in ",(0,i.kt)("inlineCode",{parentName:"li"},"todayRequests")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"List::filter")," you'll see a list\nof requests from the last 24 hours.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/todayrequest.png",src:n(92674).Z,width:"1918",height:"594"})),(0,i.kt)("ol",{start:8},(0,i.kt)("li",{parentName:"ol"},"Finally, let's emit today's requests to a background worker, using the ",(0,i.kt)("inlineCode",{parentName:"li"},"emit"),"\nkeyword. ",(0,i.kt)("inlineCode",{parentName:"li"},"emit")," takes two arguments, and in this case we're sending\n",(0,i.kt)("inlineCode",{parentName:"li"},"todayRequests")," to a not-yet-created worker named ",(0,i.kt)("inlineCode",{parentName:"li"},"storeReport"),".")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img/gettingstarted/emit.png",src:n(32530).Z,width:"1318",height:"460"})),(0,i.kt)("ol",{start:9},(0,i.kt)("li",{parentName:"ol"},'To have our first report run, hit the "replay" button in the upper right of\nthe Cron. This creates a 404 in the sidebar for the Worker ',(0,i.kt)("inlineCode",{parentName:"li"},"storeReport"),".")))}u.isMDXComponent=!0},40696:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/allrequests-e37b0238afe387fc274d483cc640dc55.png"},23605:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/comparison-090019c28235433db9bfaf691525ecd9.png"},64568:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cron_timeseconds-ad78ad557c400b3636ed19921d98d05e.png"},85391:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/crondaily-dee48e04d5cc6e64dee758c53720f459.png"},32530:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/emit-06eee1e39c4d988ac808eb09ff198afa.png"},72708:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/listfilter-74d3e1c691e047fcebedd489004f9ca1.png"},54652:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/requestseconds-47da4b7f6d329c1505ac1d92f797003e.png"},92674:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/todayrequest-4978f14b345e76c3e43c3ac2744a57bd.png"}}]);